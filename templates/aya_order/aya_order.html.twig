{# templates/aya_order/aya_order.html.twig #}
{% extends 'base.html.twig' %}

{% block stylesheets %}

	<link rel="stylesheet" href="{{ asset('assetsAya/css/ordercss.css') }}">
	{{ parent() }}
	<style>
		nav.fh5co-nav {
			background-color: #cebec9 !important;
			padding: 1px 0 !important;
			max-height: 130px !important;
		}

		body {
			background-color: #f7f7f7;
		}

		.order-form-container {
			max-width: 600px;
			margin: 150px auto 60px; /* ‚Üê top √©loign√© */
			padding: 40px;
			background: #fff;
			box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);
			border-radius: 20px;
		}

		.order-form-container h2 {
			font-weight: bold;
			margin-bottom: 25px;
			text-align: center;
			color: #6b336e;
		}

		.form-group label {
			font-weight: 600;
		}

		.btn-success {
			width: 100%;
		}
		/* Appliquer une bordure rouge nette aux champs invalides */
		.is-invalid {
			border: 2px solid #dc3545 !important;
			background-color: #fff6f6 !important;
			border-radius: 5px;
		}

		.is-invalid:focus {
			box-shadow: 0 0 5px rgba(220, 53, 69, 0.4);
		}
	</style>
{% endblock %}

{% block content %}
	<div class="container mt-5">
		<div
			class="row aya-order-wrapper justify-content-center">
			<!-- üßæ Formulaire commande -->
			<div class="col-md-7">
				<div class="order-form-container">
					<h2 class="mb-4 text-center">üßæ Validate Your Order</h2>
					{{ form_start (form, {'attr': {'novalidate': 'novalidate'}}) }}
					<div class="form-group">
						{{ form_label(form.exact_address) }}
						{{ form_widget(form.exact_address, {'attr': {'class': 'form-control' ~ (form_errors(form.exact_address) ? ' is-invalid' : ''),'placeholder': 'Enter exact delivery address'}}) }}
						{{ form_errors(form.exact_address) }}
					</div>
					<div class="form-group mt-3">
						{{ form_label(form.event_date) }}
						{{ form_widget(form.event_date, {'attr': {'class': 'form-control' ~ (form_errors(form.event_date) ? ' is-invalid' : '')}}) }}
						{{ form_errors(form.event_date) }}
					</div>
					<div class="form-group mt-3">
						{{ form_label(form.payment_method) }}
						{{ form_widget(form.payment_method, {'attr': {'class': 'form-control' ~ (form_errors(form.payment_method) ? ' is-invalid' : '')}}) }}
						{{ form_errors(form.payment_method) }}
					</div>
					<button type="submit" class="btn btn-success mt-4 w-100">Confirm Order</button>
					{{ form_end(form) }}
				</div>
			</div>

			<!-- üí≥ Section coupon & options -->
			<div class="col-md-5 ">
				<div class="order-summary-box">
					<div class="form-group">
						<label>Coupon Code</label>
						<div class="input-apply-group">
							<input type="text" class="form-control coupon-input" placeholder="Enter coupon">
							<button class="btn btn-secondary apply-btn" id="apply-coupon">Apply</button>
						</div>

					</div>


					<div class="form-group mt-4">
						<label>Gift Card</label>
						<div class="d-flex giftcard-row align-items-center">
							<input type="text" class="form-control card-input me-2" placeholder="Card Number">
							<input type="text" class="form-control pin-input me-2" placeholder="PIN">
							<button class="btn btn-secondary apply-btn" id="apply-giftcard">Apply</button>
						</div>
					</div>


					<div class="form-group mt-4">
						<label>Wallet Credit</label>
						<div class="input-apply-group">
							<input type="text" class="form-control wallet-input" placeholder="Enter amount">
							<button class="btn btn-secondary apply-btn" id="apply-wallet">Apply</button>
						</div>
					</div>


					<div class="form-group mt-4">
						<label>3alakifi Points
							<small>(Total: 0)</small>
						</label>
						<div class="input-apply-group">
							<input type="text" class="form-control alakifi-input" placeholder="Enter points">
							<button class="btn btn-secondary apply-btn" id="apply-points">Apply</button>
						</div>
					</div>


					<button class="btn btn-dark w-100 mt-4">CONTINUE</button>
				</div>
			</div>
			<!-- Cart Summary (Right Side) -->
			<div class="col-md-4">
				<div class="cart-summary">
					<h5>Cart Summary</h5>
					<div class="line total">
						<span>Total</span>
						<span id="cart-total">{{ total }}
							TND</span>
						<!-- Total r√©cup√©r√© ici -->
					</div>
					<!-- Tax, Coupon, and other lines -->
					<div class="line">
						<span>Tax</span>
						<span>+ 0.00 TND</span>
					</div>
					<div class="line">
						<span>Coupon</span>
						<span>‚àí 0.00 TND</span>
					</div>
					<hr>
					<div class="line total">
						<span>Total</span>
						<span id="final-total">{{ total }}
							TND</span>
					</div>
					{# <a href="{{ path('aya_order_confirm') }}" class="btn btn-success btn-checkout">Proceed to Checkout</a> #}
				</div>
			</div>


		</div>
	</div>
{% endblock %}
{% block javascripts %}
{{ parent() }}
<script>
document.addEventListener('DOMContentLoaded', function () {
    const totalElement = document.getElementById('cart-total'); // L'√©l√©ment o√π tu veux afficher le total

    function updateTotal() {
        const couponCode = document.querySelector('[name="coupon_code"]').value;
        const giftCardCode = document.querySelector('[name="gift_card_code"]').value;
        const giftCardPin = document.querySelector('[name="gift_card_pin"]').value;
        const walletCredit = document.querySelector('[name="wallet_credit"]').value;
        const points = document.querySelector('[name="points"]').value;

        // Envoie les donn√©es au serveur pour obtenir le total recalcul√©
        fetch('/aya/order/apply-coupon', {
            method: 'POST',
            body: JSON.stringify({ coupon_code: couponCode }),
            headers: {
                'Content-Type': 'application/json'
            }
        })
        .then(response => response.json())
        .then(data => {
            let total = 0;
            total -= data.discount; // Exemple de r√©duction de coupon

            // Similaire pour les autres champs comme la carte-cadeau, le cr√©dit, etc.
            totalElement.innerHTML = `${total} TND`; // Met √† jour l'affichage
        });
    }

    // √âcoute les √©v√©nements sur les boutons sp√©cifiques avec leurs IDs
    document.getElementById('apply-coupon').addEventListener('click', updateTotal);
    document.getElementById('apply-giftcard').addEventListener('click', updateTotal);
    document.getElementById('apply-wallet').addEventListener('click', updateTotal);
    document.getElementById('apply-points').addEventListener('click', updateTotal);
});

// Assurez-vous que tout est bien charg√© avant de manipuler les √©l√©ments
$(document).ready(function () {
    // Fonction pour recalculer le total en temps r√©el
    function updateTotal() {
        let total = parseFloat($('#cart-total').text().replace(' TND', '')); // R√©cup√®re le total actuel

        // R√©cup√®re les valeurs stock√©es dans sessionStorage pour les r√©ductions
        const couponDiscount = parseFloat(sessionStorage.getItem('coupon_discount') || 0); // R√©duction coupon
        const walletUsed = parseFloat(sessionStorage.getItem('wallet_used') || 0); // Cr√©dit utilis√© du portefeuille
        const giftCardAmount = parseFloat(sessionStorage.getItem('gift_card_amount') || 0); // Montant de la carte cadeau
        const pointsUsed = parseFloat(sessionStorage.getItem('points_used') || 0); // Montant des points utilis√©s

        // Calcul du nouveau total
        let newTotal = total - couponDiscount - walletUsed - giftCardAmount - pointsUsed;

        // Mettre √† jour l'affichage des totaux
        $('#cart-total').text(newTotal.toFixed(2) + ' TND');
        $('#final-total').text(newTotal.toFixed(2) + ' TND');
    }

    // Appliquer le coupon
    $('#apply-coupon').click(function (e) {
        e.preventDefault();
        var btn = $(this); // The clicked button
        btn.prop('disabled', true); // Disable the button to prevent multiple submissions
        let couponCode = $(this).closest('.form-group').find('input').val(); // Get coupon code

        if (couponCode) {
            $.post('/aya/order/apply-coupon', { coupon_code: couponCode }, function (response) {
                if (response.success) {
                    sessionStorage.setItem('coupon_discount', response.discount); // Store the discount value in sessionStorage
                    updateTotal(); // Update the total value dynamically
                } else {
                    alert('Invalid coupon code');
                }
                btn.prop('disabled', false); // Enable the button again after the request
            });
        }
    });

    // Handle apply wallet credit logic
    $('#apply-wallet').click(function (e) {
        e.preventDefault();
        var btn = $(this);
        btn.prop('disabled', true);
        let amount = $(this).closest('.form-group').find('.wallet-input').val(); // Get wallet credit amount

        if (amount) {
            $.post('/aya/order/apply-wallet', { amount: amount }, function (response) {
                if (response.success) {
                    sessionStorage.setItem('wallet_used', response.applied); // Store the wallet used in sessionStorage
                    updateTotal();
                } else {
                    alert('Not enough wallet balance');
                }
                btn.prop('disabled', false);
            });
        }
    });

    // Handle apply gift card logic
    $('#apply-giftcard').click(function (e) {
        e.preventDefault();
        var btn = $(this);
        btn.prop('disabled', true);
        let cardCode = $(this).closest('.form-group').find('.card-input').val(); // Get card code
        let cardPin = $(this).closest('.form-group').find('.pin-input').val(); // Get card pin

        if (cardCode && cardPin) {
            $.post('/aya/order/apply-giftcard', { code: cardCode, pin: cardPin }, function (response) {
                if (response.success) {
                    sessionStorage.setItem('gift_card_amount', response.amount); // Store the gift card amount in sessionStorage
                    updateTotal();
                } else {
                    alert(response.message || 'Failed to apply gift card');
                }
                btn.prop('disabled', false);
            });
        } else {
            alert('Please provide both card code and PIN.');
            btn.prop('disabled', false);
        }
    });


    // Handle apply points logic
    $('#apply-points').click(function (e) {
        e.preventDefault();
        var btn = $(this);
        btn.prop('disabled', true);
        let points = $(this).closest('.form-group').find('.alakifi-input').val(); // Get points value

        if (points) {
            $.post('/aya/order/apply-points', { points: points }, function (response) {
                if (response.success) {
                    sessionStorage.setItem('points_used', response.applied); // Store the points used in sessionStorage
                    updateTotal();
                } else {
                    alert('Not enough points');
                }
                btn.prop('disabled', false);
            });
        }
    });
});
// Function to update total dynamically
function updateTotal() {
    let total = parseFloat($('#cart-total').text().replace(' TND', ''));

    // Retrieve values stored in sessionStorage
    const couponDiscount = parseFloat(sessionStorage.getItem('coupon_discount') || 0);
    const walletUsed = parseFloat(sessionStorage.getItem('wallet_used') || 0);
    const giftCardAmount = parseFloat(sessionStorage.getItem('gift_card_amount') || 0);
    const pointsUsed = parseFloat(sessionStorage.getItem('points_used') || 0);

    // Calculate the new total
    let newTotal = total - couponDiscount - walletUsed - giftCardAmount - pointsUsed;

    // Update the total values in the UI
    $('#cart-total').text(newTotal.toFixed(2) + ' TND');
    $('#final-total').text(newTotal.toFixed(2) + ' TND');
}

</script>
{% endblock %}

